<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ubuntu | David Heidt's Blog]]></title>
  <link href="http://blog.heidt.biz/blog/categories/ubuntu/atom.xml" rel="self"/>
  <link href="http://blog.heidt.biz/"/>
  <updated>2013-04-09T11:55:32+02:00</updated>
  <id>http://blog.heidt.biz/</id>
  <author>
    <name><![CDATA[David Heidt]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ssl websocket proxy with stunnel howto]]></title>
    <link href="http://blog.heidt.biz/blog/2012/07/19/ssl-websocket-proxy-with-stunnel-howto/"/>
    <updated>2012-07-19T14:01:00+02:00</updated>
    <id>http://blog.heidt.biz/blog/2012/07/19/ssl-websocket-proxy-with-stunnel-howto</id>
    <content type="html"><![CDATA[<p>Recently we made up a new rails webapp using the <a href="http://pusher.com/docs/pusher_protocol">pusher protocol</a> in combination with <a href="https://github.com/stevegraham/slanger">Slanger</a> as websocket server.</p>

<p>The site needed to support both, plain http and encrypted https, so I decided to start slanger in standard mode (no ssl) and put a ssl-terminating proxy in front to handle the wss:// URIs</p>

<p>There were rumors that <a href="http://www.apsis.ch/pound/">pound</a> was capable of proxying TCP requests. I work with pound for quite a long time and did not manage to get it working. However, <a href="http://www.stunnel.org/">stunnel</a> offered a fast and solid  solution:</p>

<p>The code snippets apply to Ubuntu 10.04, but this should work on other environments, too.
I installed stunnel with</p>

<pre><code># aptitude install stunnel4
</code></pre>

<p>and ended up with this configuration:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>/etc/stunnel/stunnel.conf  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>; Certificate/key is needed in server mode and optional in client mode
</span><span class='line'><span class="nv">cert</span> <span class="o">=</span> /path/to/cert-or-cert-chain.pem
</span><span class='line'><span class="nv">key</span> <span class="o">=</span> /path/to/private.key&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;; Protocol version <span class="o">(</span>all, SSLv2, SSLv3, TLSv1<span class="o">)</span>
</span><span class='line'><span class="nv">sslVersion</span> <span class="o">=</span> all
</span><span class='line'>; no, we don<span class="err">&#39;</span>t want SSLv2
</span><span class='line'><span class="nv">options</span> <span class="o">=</span> NO_SSLv2
</span><span class='line'>; Some extra strong ciphers
</span><span class='line'><span class="nv">ciphers</span> <span class="o">=</span> ECDHE-RSA-AES256-SHA384:AES256-SHA256:RC4:HIGH:!MD5:!aNULL:!EDH:!AESGCM&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;; Some security enhancements <span class="k">for </span>UNIX systems - comment them out on Win32
</span><span class='line'><span class="nv">chroot</span> <span class="o">=</span> /var/lib/stunnel4/
</span><span class='line'><span class="nv">setuid</span> <span class="o">=</span> stunnel4
</span><span class='line'><span class="nv">setgid</span> <span class="o">=</span> stunnel4
</span><span class='line'>; PID is created inside the chroot jail
</span><span class='line'><span class="nv">pid</span> <span class="o">=</span> /stunnel4.pid&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;; Some performance tunings
</span><span class='line'><span class="nv">socket</span> <span class="o">=</span> l:TCP_NODELAY<span class="o">=</span>1
</span><span class='line'><span class="nv">socket</span> <span class="o">=</span> r:TCP_NODELAY<span class="o">=</span>1
</span><span class='line'>;<span class="nv">compression</span> <span class="o">=</span> zlib&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span>https<span class="o">]</span>
</span><span class='line'><span class="nv">accept</span>  <span class="o">=</span> &lt;your public IP&gt;:8443&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;; slanger server listens on port 8080
</span><span class='line'><span class="nv">connect</span> <span class="o">=</span> &lt;public or <span class="nb">local </span>IP&gt;:8080
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>If you can spare an extra server or an additional IP Address for your websocket server, it may be better to use the standard ports 80 and 443.</p>

<p>Possible pitfall: make sure, the hostname (don't use an IP Address!) of yor pusher clients matches the common name of the certificate provided to stunnel. Otherwise some browsers (chrome at least) will fail silently when connecting to secure websocket URIs (wss://example.com/).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[installing Icinga and pnp4nagios on Ubuntu 12.04 (precise pangolin)]]></title>
    <link href="http://blog.heidt.biz/blog/2012/06/19/installing-icinga-and-pnp4nagios-on-ubuntu-12-dot-04-precise-pangolin/"/>
    <updated>2012-06-19T11:30:00+02:00</updated>
    <id>http://blog.heidt.biz/blog/2012/06/19/installing-icinga-and-pnp4nagios-on-ubuntu-12-dot-04-precise-pangolin</id>
    <content type="html"><![CDATA[<p>This is actually so easy and painless, I had to write this down:</p>

<p>I presume installing apache2 is no problem for you. This short tutorial covers a very minimalistic icinga installation, no idoutils, no distribution, no check_mk. So, let's do it:</p>

<pre><code>aptitude install icinga pnp4nagios
</code></pre>

<p>and follow debconf's instructions</p>

<p>In /etc/icinga/icinga.cfg change the following variable</p>

<pre><code>process_performance_data=1
</code></pre>

<p>and set this one:</p>

<pre><code>broker_module=/usr/lib/pnp4nagios/npcdmod.o config_file=/etc/pnp4nagios/npcd.cfg
</code></pre>

<p>Now, edit /etc/default/npcd and set</p>

<pre><code>RUN="yes"
</code></pre>

<p>finally, enable the views in icingas standard templates:
for hosts, edit /etc/icinga/objects/generic-host_icinga.cfg
and add</p>

<pre><code>action_url  /pnp4nagios/graph?host=$HOSTNAME$
</code></pre>

<p>for services, edit /etc/icinga/objects/generic-service_icinga.cfg
and add:</p>

<pre><code>action_url  /pnp4nagios/graph?host=$HOSTNAME$&amp;srv=$SERVICEDESC$
</code></pre>

<p>One last thing: change this line in  /etc/apache2/conf.d/pnp4nagios.conf from the "nagios3" directory to "icinga":</p>

<pre><code>AuthUserFile /etc/icinga/htpasswd.users
</code></pre>

<p>finally, start npcd and restart icinga by executing</p>

<pre><code># service apache2 restart
# service npcd start
# service icinga restart
</code></pre>

<p>login to http://hostname/icinga with user icingaadmin and the password you specified. enjoy icinga with pnp4nagios!</p>

<p>One last hint: If you're still using nagios and thinking about using icinga: Just copy your nagios config files to icinga and be much happier. In most cases this awesome fork works out of the box!</p>
]]></content>
  </entry>
  
</feed>
